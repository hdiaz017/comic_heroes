{"version":3,"sources":["auth/AuthContext.js","types/types.js","auth/authReducer.js","components/login/LoginScreen.js","components/ui/NavBar.js","data/heroes.js","components/heroes/HeroCard.js","components/heroes/HeroesList.js","selectors/getHeroesByPublisher.js","components/marvel/MarvelScreen.js","components/dc/DCScreen.js","components/heroes/HeroScreen.js","selectors/getHeroById.js","components/search/SearchScreen.js","helpers/queryString.js","hooks/useForm.js","selectors/getHeroesByName.js","routers/DashBoardRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AuthContext","createContext","types","authReducer","state","action","type","payload","logged","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","localStorage","getItem","console","log","name","replace","Navbar","user","useHistory","to","activeClassName","exact","heroes","id","superhero","publisher","alter_ego","first_appearance","characters","HeroCard","style","maxWidth","src","alt","HeroesList","useMemo","includes","Error","filter","hero","getHeroesByPublisher","map","h","key","MarvelScreen","DCScreen","HeroScreen","heroeId","useParams","find","length","push","goBack","SearchScreen","location","locationArray","split","result","forEach","e","value","queryString","useLocation","search","q","initialState","useState","values","setValues","reset","handleInputChange","target","useForm","searchText","filteredHeroes","toLocaleLowerCase","getHeroesByName","onSubmit","preventDefault","toLowerCase","placeholder","onChange","DashBoardRouter","path","component","PrivateRoute","isAuthenticated","Component","rest","setItem","pathname","props","PublicRoute","AppRouter","init","JSON","parse","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f25dad2.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext();\n","export const types = {\n   login: '[auth] login',\n   logout: '[auth] logout',\n};\n","import { types } from '../types/types';\n\nexport const authReducer = (state = {}, action) => {\n   switch (action.type) {\n      case types.login:\n         return {\n            ...action.payload,\n            logged: true,\n         };\n      case types.logout:\n         return {\n            logged: false,\n         };\n\n      default:\n         return state;\n   }\n};\n","import React, { useContext } from 'react';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const LoginScreen = ({ history }) => {\n   const { dispatch } = useContext(AuthContext);\n\n   const handleLogin = () => {\n      const lastPath = localStorage.getItem('lastPath') || '/';\n      console.log(lastPath);\n      const action = {\n         payload: { name: 'hdiaz17' },\n         type: types.login,\n      };\n      dispatch(action);\n      history.replace(lastPath);\n   };\n   return (\n      <div className='container mt-5'>\n         <h1>LoginScreen</h1>\n         <hr />\n         <button className='btn btn-primary' onClick={handleLogin}>\n            Log In\n         </button>\n      </div>\n   );\n};\n","import React, { useContext } from 'react';\nimport { Link, NavLink, useHistory } from 'react-router-dom';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\n\nexport const Navbar = () => {\n   const { user, dispatch } = useContext(AuthContext);\n   const history = useHistory();\n\n   const handleLogout = () => {\n      history.replace('/login');\n      dispatch({\n         type: types.logout,\n      });\n   };\n   return (\n      <nav className='navbar navbar-expand-sm navbar-dark bg-dark'>\n         <Link className='navbar-brand' to='/'>\n            Publishers\n         </Link>\n\n         <div className='navbar-collapse'>\n            <div className='navbar-nav'>\n               <NavLink\n                  activeClassName='active'\n                  className='nav-item nav-link'\n                  exact\n                  to='/marvel'\n               >\n                  Marvel\n               </NavLink>\n\n               <NavLink\n                  activeClassName='active'\n                  className='nav-item nav-link'\n                  exact\n                  to='/dc'\n               >\n                  DC\n               </NavLink>\n               <NavLink\n                  activeClassName='active'\n                  className='nav-item nav-link'\n                  exact\n                  to='/search'\n               >\n                  Search\n               </NavLink>\n            </div>\n         </div>\n\n         <div className='navbar-collapse collapse w-100 order-3 dual-collapse2'>\n            <ul className='navbar-nav ml-auto '>\n               <span className='nav-item nav-link text-info'>{user.name}</span>\n               <button className='nav-item nav-link btn' onClick={handleLogout}>\n                  Logout\n               </button>\n            </ul>\n         </div>\n      </nav>\n   );\n};\n","export const heroes = [\n   {\n      id: 'dc-batman',\n      superhero: 'Batman',\n      publisher: 'DC Comics',\n      alter_ego: 'Bruce Wayne',\n      first_appearance: 'Detective Comics #27',\n      characters: 'Bruce Wayne',\n   },\n   {\n      id: 'dc-superman',\n      superhero: 'Superman',\n      publisher: 'DC Comics',\n      alter_ego: 'Clark Kent',\n      first_appearance: 'Action Comics #1',\n      characters: 'Clark Kent',\n   },\n   {\n      id: 'dc-flash',\n      superhero: 'Flash',\n      publisher: 'DC Comics',\n      alter_ego: 'Jay Garrick',\n      first_appearance: 'Flash Comics #1',\n      characters: 'Jay Garrick, Barry Allen, Wally West, Bart Allen',\n   },\n   {\n      id: 'dc-green',\n      superhero: 'Green Lantern',\n      publisher: 'DC Comics',\n      alter_ego: 'Alan Scott',\n      first_appearance: 'All-American Comics #16',\n      characters:\n         'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz',\n   },\n   {\n      id: 'dc-arrow',\n      superhero: 'Green Arrow',\n      publisher: 'DC Comics',\n      alter_ego: 'Oliver Queen',\n      first_appearance: 'More Fun Comics #73',\n      characters: 'Oliver Queen',\n   },\n   {\n      id: 'dc-wonder',\n      superhero: 'Wonder Woman',\n      publisher: 'DC Comics',\n      alter_ego: 'Princess Diana',\n      first_appearance: 'All Star Comics #8',\n      characters: 'Princess Diana',\n   },\n   {\n      id: 'dc-martian',\n      superhero: 'Martian Manhunter',\n      publisher: 'DC Comics',\n      alter_ego: \"J'onn J'onzz\",\n      first_appearance: 'Detective Comics #225',\n      characters: 'Martian Manhunter',\n   },\n   {\n      id: 'dc-robin',\n      superhero: 'Robin/Nightwing',\n      publisher: 'DC Comics',\n      alter_ego: 'Dick Grayson',\n      first_appearance: 'Detective Comics #38',\n      characters: 'Dick Grayson',\n   },\n   {\n      id: 'dc-blue',\n      superhero: 'Blue Beetle',\n      publisher: 'DC Comics',\n      alter_ego: 'Dan Garret',\n      first_appearance: 'Mystery Men Comics #1',\n      characters: 'Dan Garret, Ted Kord, Jaime Reyes',\n   },\n   {\n      id: 'dc-black',\n      superhero: 'Black Canary',\n      publisher: 'DC Comics',\n      alter_ego: 'Dinah Drake',\n      first_appearance: 'Flash Comics #86',\n      characters: 'Dinah Drake, Dinah Lance',\n   },\n   {\n      id: 'marvel-spider',\n      superhero: 'Spider Man',\n      publisher: 'Marvel Comics',\n      alter_ego: 'Peter Parker',\n      first_appearance: 'Amazing Fantasy #15',\n      characters: 'Peter Parker',\n   },\n   {\n      id: 'marvel-captain',\n      superhero: 'Captain America',\n      publisher: 'Marvel Comics',\n      alter_ego: 'Steve Rogers',\n      first_appearance: 'Captain America Comics #1',\n      characters: 'Steve Rogers',\n   },\n   {\n      id: 'marvel-iron',\n      superhero: 'Iron Man',\n      publisher: 'Marvel Comics',\n      alter_ego: 'Tony Stark',\n      first_appearance: 'Tales of Suspense #39',\n      characters: 'Tony Stark',\n   },\n   {\n      id: 'marvel-thor',\n      superhero: 'Thor',\n      publisher: 'Marvel Comics',\n      alter_ego: 'Thor Odinson',\n      first_appearance: 'Journey into Myster #83',\n      characters: 'Thor Odinson',\n   },\n   {\n      id: 'marvel-hulk',\n      superhero: 'Hulk',\n      publisher: 'Marvel Comics',\n      alter_ego: 'Bruce Banner',\n      first_appearance: 'The Incredible Hulk #1',\n      characters: 'Bruce Banner',\n   },\n   {\n      id: 'marvel-wolverine',\n      superhero: 'Wolverine',\n      publisher: 'Marvel Comics',\n      alter_ego: 'James Howlett',\n      first_appearance: 'The Incredible Hulk #180',\n      characters: 'James Howlett',\n   },\n   {\n      id: 'marvel-daredevil',\n      superhero: 'Daredevil',\n      publisher: 'Marvel Comics',\n      alter_ego: 'Matthew Michael Murdock',\n      first_appearance: 'Daredevil #1',\n      characters: 'Matthew Michael Murdock',\n   },\n   {\n      id: 'marvel-hawkeye',\n      superhero: 'Hawkeye',\n      publisher: 'Marvel Comics',\n      alter_ego: 'Clinton Francis Barton',\n      first_appearance: 'Tales of Suspense #57',\n      characters: 'Clinton Francis Barton',\n   },\n   {\n      id: 'marvel-cyclops',\n      superhero: 'Cyclops',\n      publisher: 'Marvel Comics',\n      alter_ego: 'Scott Summers',\n      first_appearance: 'X-Men #1',\n      characters: 'Scott Summers',\n   },\n   {\n      id: 'marvel-silver',\n      superhero: 'Silver Surfer',\n      publisher: 'Marvel Comics',\n      alter_ego: 'Norrin Radd',\n      first_appearance: 'The Fantastic Four #48',\n      characters: 'Norrin Radd',\n   },\n];\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const HeroCard = ({\n   id,\n   superhero,\n   publisher,\n   alter_ego,\n   first_appearance,\n   characters,\n}) => {\n   return (\n      <div className='card ms-3' style={{ maxWidth: 540 }}>\n         <div className='row no-gutters'>\n            <div className='col-md-4'>\n               <img\n                  src={`./assets/heroes/${id}.jpg`}\n                  alt={superhero}\n                  className='card-img'\n               />\n            </div>\n            <div className='col-md-8'>\n               <div className='card-body'>\n                  <h5 className='card-title'>{superhero}</h5>\n                  <p className='card-text'>{alter_ego}</p>\n                  <Link to={`./hero/${id}`}>Mas...</Link>\n               </div>\n            </div>\n         </div>\n      </div>\n   );\n};\n","import React, { useMemo } from 'react';\nimport { getHeroesByPublisher } from '../../selectors/getHeroesByPublisher';\nimport { HeroCard } from './HeroCard';\n\nexport const HeroesList = ({ publisher }) => {\n   const heroes = useMemo(() => getHeroesByPublisher(publisher), [publisher]);\n   // const heroes = getHeroesByPublisher(publisher);\n   return (\n      <div className='card-columns'>\n         {heroes.map((h) => (\n            <HeroCard key={h.id} {...h} />\n         ))}\n      </div>\n   );\n};\n","import { heroes } from '../data/heroes';\n\nexport const getHeroesByPublisher = (publisher) => {\n   const validPublishers = ['DC Comics', 'Marvel Comics'];\n\n   if (!validPublishers.includes(publisher)) {\n      throw new Error(`Publisher \"${publisher}\" no es correcto`);\n   }\n\n   return heroes.filter((hero) => hero.publisher === publisher);\n};\n","import React from 'react';\nimport { HeroesList } from '../heroes/HeroesList';\n\nexport const MarvelScreen = () => {\n   return (\n      <div className='container mt-3'>\n         <h1>Marvel Screen</h1>\n         <hr />\n         <HeroesList publisher='Marvel Comics' />\n      </div>\n   );\n};\n","import React from 'react';\nimport { HeroesList } from '../heroes/HeroesList';\n\nexport const DCScreen = () => {\n   return (\n      <div className='container mt-3'>\n         <h1>DC Screen</h1>\n         <hr />\n         <HeroesList publisher='DC Comics' />\n      </div>\n   );\n};\n","import React from 'react';\nimport { useParams, Redirect } from 'react-router-dom';\nimport { getHeroById } from '../../selectors/getHeroById';\n\nexport const HeroScreen = ({ history }) => {\n   const { heroeId } = useParams();\n   const hero = getHeroById(heroeId);\n   if (!hero) {\n      return <Redirect to='/' />;\n   }\n\n   const { superhero, publisher, alter_ego, first_appearance } = hero;\n\n   const handleReturn = () => {\n      if (history.length <= 2) {\n         history.push('/');\n      } else {\n         history.goBack();\n      }\n   };\n\n   return (\n      <div className='row mt-5'>\n         <div className='col-4'>\n            <img\n               src={`../assets/heroes/${heroeId}.jpg`}\n               alt={superhero}\n               className='img-thumbnail'\n            />\n         </div>\n         <div className='col-8'>\n            <h3>{superhero}</h3>\n            <ul className='list-group list-group-flush'>\n               <li className='list-group-item'>\n                  <strong>Alter ego: </strong>\n                  {alter_ego}\n               </li>\n               <li className='list-group-item'>\n                  <strong>Publisher: </strong>\n                  {publisher}\n               </li>\n               <li className='list-group-item'>\n                  <strong>First Appearance: </strong>\n                  {first_appearance}\n               </li>\n            </ul>\n            <button className='btn btn-primary' onClick={handleReturn}>\n               Return\n            </button>\n         </div>\n      </div>\n   );\n};\n","import { heroes } from '../data/heroes';\n\nexport const getHeroById = (id) => {\n   return heroes.find((hero) => hero.id === id);\n};\n","import React, { useMemo } from 'react';\n\nimport { HeroCard } from '../heroes/HeroCard';\nimport { useForm } from '../../hooks/useForm';\nimport { queryString } from '../../helpers/queryString';\nimport { useLocation } from 'react-router-dom';\nimport { getHeroesByName } from '../../selectors/getHeroesByName';\n// import { heroes } from '../../data/heroes';\n\nexport const SearchScreen = ({ history }) => {\n   const location = useLocation();\n   const { q = '' } = queryString(location.search);\n   const [{ searchText }, handleInputChange] = useForm({ searchText: q });\n   const filteredHeroes = useMemo(() => getHeroesByName(searchText), [q]);\n\n   const handleSearch = (e) => {\n      e.preventDefault();\n\n      history.push(`?q=${searchText.toLowerCase()}`);\n   };\n   return (\n      <div className='container'>\n         <h1>Search Screen</h1>\n         <hr />\n         <div className='row'>\n            <div className='col-5'>\n               <h4>Search Form</h4>\n               <hr />\n               <form onSubmit={handleSearch}>\n                  <input\n                     type='text'\n                     placeholder='Search your hero...'\n                     className='form-control'\n                     name='searchText'\n                     onChange={handleInputChange}\n                     value={searchText}\n                  />\n                  <button\n                     className='btn m-1 btn-block btn-outline-primary'\n                     type='submit'\n                  >\n                     Search\n                  </button>\n               </form>\n            </div>\n            <div className='col-7'>\n               <h4>Results</h4>\n               <hr />\n\n               {filteredHeroes.map((hero) => (\n                  <HeroCard key={hero.id} {...hero} />\n               ))}\n            </div>\n         </div>\n      </div>\n   );\n};\n","export const queryString = (location) => {\n   const locationArray = location.replace('?', '').split('&');\n   let result = {};\n   locationArray.forEach((e) => {\n      const [key, value] = e.split('=');\n      result = { ...result, [key]: value };\n   });\n   return result;\n};\n","import { useState } from 'react';\n\nexport const useForm = (initialState = {}) => {\n   const [values, setValues] = useState(initialState);\n   const reset = () => {\n      setValues(initialState);\n   };\n   const handleInputChange = (e) => {\n      setValues({ ...values, [e.target.name]: e.target.value });\n   };\n\n   return [values, handleInputChange, reset];\n};\n","import { heroes } from '../data/heroes';\n\nexport const getHeroesByName = (name = '') => {\n   if (name === '') {\n      return [];\n   }\n   return heroes.filter((hero) =>\n      hero.superhero.toLocaleLowerCase().includes(name),\n   );\n};\n","import React from 'react';\nimport { Navbar } from '../components/ui/NavBar';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { MarvelScreen } from '../components/marvel/MarvelScreen';\nimport { DCScreen } from '../components/dc/DCScreen';\nimport { HeroScreen } from '../components/heroes/HeroScreen';\nimport { SearchScreen } from '../components/search/SearchScreen';\n\nexport const DashBoardRouter = () => {\n   return (\n      <>\n         <Navbar />\n         <div>\n            <Switch>\n               <Route exact path='/marvel' component={MarvelScreen} />\n               <Route exact path='/dc' component={DCScreen} />\n               <Route exact path='/hero/:heroeId' component={HeroScreen} />\n               <Route exact path='/search' component={SearchScreen} />\n               <Redirect to='/marvel' />\n            </Switch>\n         </div>\n      </>\n   );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n   isAuthenticated,\n   component: Component,\n   ...rest\n}) => {\n   localStorage.setItem('lastPath', rest.location.pathname);\n   return (\n      <Route\n         {...rest}\n         component={(props) =>\n            isAuthenticated ? (\n               <Component {...props} />\n            ) : (\n               <Redirect to='/login' />\n            )\n         }\n      />\n   );\n};\n\nPrivateRoute.propTypes = {\n   isAuthenticated: PropTypes.bool.isRequired,\n   component: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRoute = ({\n   isAuthenticated,\n   component: Component,\n   ...rest\n}) => {\n   return (\n      <Route\n         {...rest}\n         component={(props) =>\n            !isAuthenticated ? <Component {...props} /> : <Redirect to='/' />\n         }\n      />\n   );\n};\n\nPublicRoute.propTypes = {\n   isAuthenticated: PropTypes.bool.isRequired,\n   component: PropTypes.func.isRequired,\n};\n","import React, { useContext } from 'react';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { AuthContext } from '../auth/AuthContext';\n\nimport { LoginScreen } from '../components/login/LoginScreen';\nimport { DashBoardRouter } from './DashBoardRouter';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const AppRouter = () => {\n   const { user } = useContext(AuthContext);\n   return (\n      <Router>\n         <div>\n            <Switch>\n               <PublicRoute\n                  exact\n                  path='/login'\n                  component={LoginScreen}\n                  isAuthenticated={user.logged}\n               />\n               <PrivateRoute\n                  isAuthenticated={user.logged}\n                  path='/'\n                  component={DashBoardRouter}\n               />\n            </Switch>\n         </div>\n      </Router>\n   );\n};\n","import React, { useEffect, useReducer } from 'react';\nimport { AuthContext } from './auth/AuthContext';\nimport { authReducer } from './auth/authReducer';\nimport { AppRouter } from './routers/AppRouter';\n\nconst init = () => {\n   return (\n      JSON.parse(localStorage.getItem('user')) || {\n         logged: false,\n      }\n   );\n};\n\nexport const HeroesApp = () => {\n   const [user, dispatch] = useReducer(authReducer, {}, init);\n   useEffect(() => {\n      localStorage.setItem('user', JSON.stringify(user));\n   }, [user]);\n   return (\n      <div>\n         <AuthContext.Provider value={{ user, dispatch }}>\n            <AppRouter />\n         </AuthContext.Provider>\n      </div>\n   );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HeroesApp } from './HeroesApp';\n\nReactDOM.render(\n   <HeroesApp />,\n\n   document.getElementById('root'),\n);\n"],"sourceRoot":""}